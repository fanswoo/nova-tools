import { Module, VuexModule, Mutation } from 'vuex-module-decorators';

import Specification from '@fanswoo/control-center/pages/admin/custom-component/edit-control-center/line-content/shop/product/product/classes/specification';
import SpecificationName from '@fanswoo/control-center/pages/admin/custom-component/edit-control-center/line-content/shop/product/product/classes/specification-name';
import SpecificationColor from '@fanswoo/control-center/pages/admin/custom-component/edit-control-center/line-content/shop/product/product/classes/specification-color';
import {
  resetSpecificationNames,
  resetSpecificationColors,
  getNoEmptySpecificationNames,
  getNoEmptySpecificationColors,
  createSpecifications,
  createOriginSpecifications,
} from '@fanswoo/control-center/pages/admin/custom-component/edit-control-center/line-content/shop/product/product/helpers/specification-helper';

const ProductSpecificationModule = {
  namespaced: true,
  
  state: () => ({
    specifications: [],
    originSpecifications: [],
    specificationNames: [],
    specificationColors: [],
  }),
  
  getters: {
    noEmptySpecificationNames: (state) => {
      return getNoEmptySpecificationNames(state.specificationNames);
    },
    noEmptySpecificationColors: (state) => {
      return getNoEmptySpecificationColors(state.specificationColors);
    },
  },
  
  mutations: {
    setOriginSpecifications(state, specifications) {
      const specificationList = createOriginSpecifications({
        specificationNames: state.specificationNames,
        specificationColors: state.specificationColors,
        specifications,
      });
      state.originSpecifications = specificationList;
      state.specifications = specificationList;
    },
    setSpecificationNames(state, specificationNames) {
      state.specificationNames = resetSpecificationNames(specificationNames);
    },
    setSpecificationName(state, { index, field, value }) {
      if (state.specificationNames[index] && state.specificationNames[index][field] !== undefined) {
        state.specificationNames[index][field] = value;
      }
      state.specificationNames = resetSpecificationNames(state.specificationNames);
      
      const specificationList = createSpecifications({
        specificationNames: state.specificationNames,
        specificationColors: state.specificationColors,
        originSpecifications: state.originSpecifications,
      });
      state.specifications = specificationList;
    },
    setSpecificationColors(state, specificationColors) {
      state.specificationColors = resetSpecificationColors(specificationColors);
    },
    setSpecificationColor(state, { index, field, value }) {
      if (state.specificationColors[index] && state.specificationColors[index][field] !== undefined) {
        state.specificationColors[index][field] = value;
      }
      state.specificationColors = resetSpecificationColors(state.specificationColors);
      
      const specificationList = createSpecifications({
        specificationNames: state.specificationNames,
        specificationColors: state.specificationColors,
        originSpecifications: state.originSpecifications,
      });
      
      state.specifications = specificationList;
    },
  },
  
  actions: {
    // If there are any asynchronous operations, they can be handled here.
  },
};

export default ProductSpecificationModule;